{"version":3,"file":"components-Button-IconButton-stories.88aae9ee.iframe.bundle.js","mappings":";;;;AAgNA;;;;AAuBA","sources":["webpack://@rocket.chat/fuselage/./src/components/Button/IconButton.stories.tsx"],"sourcesContent":["import { css } from '@rocket.chat/css-in-js';\nimport type { StoryFn, Meta } from '@storybook/react';\n\nimport { PropsVariationSection } from '../../../.storybook/helpers';\nimport { Avatar } from '../Avatar';\nimport { Badge } from '../Badge';\nimport Box from '../Box/Box';\nimport { ButtonGroup } from '../ButtonGroup';\nimport { avatarUrl } from '../Message/helpers';\nimport { IconButton } from './IconButton';\n\nexport default {\n  title: 'Inputs/IconButton',\n  component: IconButton,\n} satisfies Meta<typeof IconButton>;\n\nconst EmojiElement = (\n  <div className='rcx-box rcx-box--full'>\n    <span\n      className='emojione emojione-diversity _1f918-1f3fe'\n      title=':metal_tone4:'\n    >\n      ü§òüèæ\n    </span>\n  </div>\n);\n\nexport const _IconButton: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' />\n);\n\nexport const States = () => (\n  <>\n    <PropsVariationSection\n      component={IconButton}\n      common={{\n        'icon': 'doner',\n        'medium': true,\n        'aria-label': 'balloon',\n      }}\n      xAxis={{\n        default: {},\n        hover: { className: 'hover' },\n        active: { className: 'active' },\n        focus: { className: 'focus focus-visible' },\n        pressed: { pressed: true },\n        disabled: { disabled: true },\n      }}\n      yAxis={{\n        default: {},\n        info: {\n          info: true,\n        },\n        danger: {\n          danger: true,\n        },\n        emoji: {\n          icon: EmojiElement,\n        },\n      }}\n    />\n    {/* <Divider />\n    <PropsVariationSection\n      component={IconButton}\n      common={{\n        icon: 'doner',\n        large: true,\n      }}\n      xAxis={{\n        large: {},\n        hover: { className: 'hover' },\n        active: { className: 'active' },\n        focus: { className: 'focus focus-visible' },\n        pressed: { pressed: true },\n        disabled: { disabled: true },\n      }}\n      yAxis={{\n        default: {\n        },\n        info: {\n          info: true,\n        },\n        danger: {\n          danger: true,\n        },\n        emoji: {\n          icon: EmojiElement,\n        },\n      }}\n    /> */}\n  </>\n);\n\nexport const Variants = () => (\n  <>\n    <PropsVariationSection\n      component={IconButton}\n      common={{\n        'icon': 'doner',\n        'medium': true,\n        'aria-label': 'balloon',\n      }}\n      xAxis={{\n        default: {},\n        hover: { className: 'hover' },\n        active: { className: 'active' },\n        focus: { className: 'focus focus-visible' },\n        disabled: { disabled: true },\n      }}\n      yAxis={{\n        'default': {},\n        'info': {\n          info: true,\n        },\n        'danger': {\n          danger: true,\n        },\n        'success': {\n          success: true,\n        },\n        'warning': {\n          warning: true,\n        },\n        'secondary': {\n          secondary: true,\n        },\n        'secondary-info | primary': {\n          info: true,\n          secondary: true,\n        },\n        'secondary-danger': {\n          danger: true,\n          secondary: true,\n        },\n        'secondary-success': {\n          success: true,\n          secondary: true,\n        },\n        'secondary-warning': {\n          warning: true,\n          secondary: true,\n        },\n      }}\n    />\n  </>\n);\n\nexport const Sizes = () => (\n  <ButtonGroup>\n    <IconButton icon='balloon' aria-label='balloon' secondary />\n    <IconButton icon='balloon' aria-label='balloon' secondary medium />\n    <IconButton icon='balloon' aria-label='balloon' secondary small />\n    <IconButton icon='balloon' aria-label='balloon' secondary tiny />\n    <IconButton icon='balloon' aria-label='balloon' secondary mini />\n  </ButtonGroup>\n);\nexport const _IconButtonDisabled: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' disabled />\n);\n\nexport const _IconButtonWithEmoji: StoryFn<typeof IconButton> = () => (\n  <IconButton icon={EmojiElement} aria-label='emoji' />\n);\n\nexport const _IconButtonInfo: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' info />\n);\n\nexport const _IconButtonSecondaryInfo: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' secondary info />\n);\n\nexport const _IconButtonSuccess: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' success />\n);\n\nexport const _IconButtonSecondarySuccess: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' secondary success />\n);\n\nexport const _IconButtonWarning: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' warning />\n);\n\nexport const _IconButtonSecondaryWarning: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' secondary warning />\n);\n\nexport const _IconButtonDanger: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' danger />\n);\n\nexport const _IconButtonSecondaryDanger: StoryFn<typeof IconButton> = () => (\n  <IconButton icon='balloon' aria-label='balloon' secondary danger />\n);\n\nexport const _IconButtonWithBadge: StoryFn<typeof IconButton> = () => (\n  <ButtonGroup>\n    <IconButton icon='balloon' small position='relative' overflow='visible'>\n      <Box\n        position='absolute'\n        role='status'\n        className={css`\n          top: 0;\n          right: 0;\n          transform: translate(30%, -30%);\n        `}\n      >\n        <Badge variant='danger'>2</Badge>\n      </Box>\n    </IconButton>\n  </ButtonGroup>\n);\n\nexport const _IconButtonAvatarWithBadge: StoryFn<typeof IconButton> = () => (\n  <ButtonGroup>\n    <IconButton\n      icon={<Avatar size='x28' url={avatarUrl} />}\n      small\n      position='relative'\n      overflow='visible'\n    >\n      <Box\n        position='absolute'\n        role='status'\n        className={css`\n          top: 0;\n          right: 0;\n          transform: translate(30%, -30%);\n        `}\n      >\n        <Badge variant='danger'>2</Badge>\n      </Box>\n    </IconButton>\n  </ButtonGroup>\n);\n"],"names":[],"sourceRoot":""}