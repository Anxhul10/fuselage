"use strict";(self.webpackChunk_rocket_chat_fuselage=self.webpackChunk_rocket_chat_fuselage||[]).push([[4695],{"./src/components/Position/Position.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,bottomEnd:()=>bottomEnd,bottomMiddle:()=>bottomMiddle,bottomStart:()=>bottomStart,default:()=>__WEBPACK_DEFAULT_EXPORT__,leftEnd:()=>leftEnd,leftMiddle:()=>leftMiddle,leftStart:()=>leftStart,rightEnd:()=>rightEnd,rightMiddle:()=>rightMiddle,rightStart:()=>rightStart,topEnd:()=>topEnd,topMiddle:()=>topMiddle,topStart:()=>topStart});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_Tile__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Tile/index.ts"),_Position__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Position/Position.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Layout/Position",component:_Position__WEBPACK_IMPORTED_MODULE_3__.A,parameters:{layout:"centered"}},Template=({placement})=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Tile__WEBPACK_IMPORTED_MODULE_2__.A,{padding:12,ref,children:"Anchor element"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Position__WEBPACK_IMPORTED_MODULE_3__.A,{anchor:ref,placement,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Tile__WEBPACK_IMPORTED_MODULE_2__.A,{children:"Positioned element"})})]})},topStart=Template.bind({});topStart.args={placement:"top-start"};const topMiddle=Template.bind({});topMiddle.args={placement:"top-middle"};const topEnd=Template.bind({});topEnd.args={placement:"top-end"};const bottomStart=Template.bind({});bottomStart.args={placement:"bottom-start"};const bottomMiddle=Template.bind({});bottomMiddle.args={placement:"bottom-middle"};const bottomEnd=Template.bind({});bottomEnd.args={placement:"bottom-end"};const rightStart=Template.bind({});rightStart.args={placement:"right-start"};const rightMiddle=Template.bind({});rightMiddle.args={placement:"right-middle"};const rightEnd=Template.bind({});rightEnd.args={placement:"right-end"};const leftStart=Template.bind({});leftStart.args={placement:"left-start"};const leftMiddle=Template.bind({});leftMiddle.args={placement:"left-middle"};const leftEnd=Template.bind({});leftEnd.args={placement:"left-end"};const __namedExportsOrder=["topStart","topMiddle","topEnd","bottomStart","bottomMiddle","bottomEnd","rightStart","rightMiddle","rightEnd","leftStart","leftMiddle","leftEnd"];topStart.parameters={...topStart.parameters,docs:{...topStart.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...topStart.parameters?.docs?.source}}},topMiddle.parameters={...topMiddle.parameters,docs:{...topMiddle.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...topMiddle.parameters?.docs?.source}}},topEnd.parameters={...topEnd.parameters,docs:{...topEnd.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...topEnd.parameters?.docs?.source}}},bottomStart.parameters={...bottomStart.parameters,docs:{...bottomStart.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...bottomStart.parameters?.docs?.source}}},bottomMiddle.parameters={...bottomMiddle.parameters,docs:{...bottomMiddle.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...bottomMiddle.parameters?.docs?.source}}},bottomEnd.parameters={...bottomEnd.parameters,docs:{...bottomEnd.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...bottomEnd.parameters?.docs?.source}}},rightStart.parameters={...rightStart.parameters,docs:{...rightStart.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...rightStart.parameters?.docs?.source}}},rightMiddle.parameters={...rightMiddle.parameters,docs:{...rightMiddle.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...rightMiddle.parameters?.docs?.source}}},rightEnd.parameters={...rightEnd.parameters,docs:{...rightEnd.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...rightEnd.parameters?.docs?.source}}},leftStart.parameters={...leftStart.parameters,docs:{...leftStart.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...leftStart.parameters?.docs?.source}}},leftMiddle.parameters={...leftMiddle.parameters,docs:{...leftMiddle.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...leftMiddle.parameters?.docs?.source}}},leftEnd.parameters={...leftEnd.parameters,docs:{...leftEnd.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...leftEnd.parameters?.docs?.source}}}}}]);