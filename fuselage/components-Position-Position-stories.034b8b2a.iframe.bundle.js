"use strict";(self.webpackChunk_rocket_chat_fuselage=self.webpackChunk_rocket_chat_fuselage||[]).push([[4695],{"./src/components/Position/Position.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BottomEnd:()=>BottomEnd,BottomMiddle:()=>BottomMiddle,BottomStart:()=>BottomStart,LeftEnd:()=>LeftEnd,LeftMiddle:()=>LeftMiddle,LeftStart:()=>LeftStart,RightEnd:()=>RightEnd,RightMiddle:()=>RightMiddle,RightStart:()=>RightStart,TopEnd:()=>TopEnd,TopMiddle:()=>TopMiddle,TopStart:()=>TopStart,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_Tile__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Tile/index.ts"),_Position__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Position/Position.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Layout/Position",component:_Position__WEBPACK_IMPORTED_MODULE_3__.A,parameters:{layout:"centered"}},Template=({placement})=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Tile__WEBPACK_IMPORTED_MODULE_2__.A,{padding:12,ref,children:"Anchor element"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Position__WEBPACK_IMPORTED_MODULE_3__.A,{anchor:ref,placement,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Tile__WEBPACK_IMPORTED_MODULE_2__.A,{children:"Positioned element"})})]})},TopStart=Template.bind({});TopStart.args={placement:"top-start"};const TopMiddle=Template.bind({});TopMiddle.args={placement:"top-middle"};const TopEnd=Template.bind({});TopEnd.args={placement:"top-end"};const BottomStart=Template.bind({});BottomStart.args={placement:"bottom-start"};const BottomMiddle=Template.bind({});BottomMiddle.args={placement:"bottom-middle"};const BottomEnd=Template.bind({});BottomEnd.args={placement:"bottom-end"};const RightStart=Template.bind({});RightStart.args={placement:"right-start"};const RightMiddle=Template.bind({});RightMiddle.args={placement:"right-middle"};const RightEnd=Template.bind({});RightEnd.args={placement:"right-end"};const LeftStart=Template.bind({});LeftStart.args={placement:"left-start"};const LeftMiddle=Template.bind({});LeftMiddle.args={placement:"left-middle"};const LeftEnd=Template.bind({});LeftEnd.args={placement:"left-end"};const __namedExportsOrder=["TopStart","TopMiddle","TopEnd","BottomStart","BottomMiddle","BottomEnd","RightStart","RightMiddle","RightEnd","LeftStart","LeftMiddle","LeftEnd"];TopStart.parameters={...TopStart.parameters,docs:{...TopStart.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...TopStart.parameters?.docs?.source}}},TopMiddle.parameters={...TopMiddle.parameters,docs:{...TopMiddle.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...TopMiddle.parameters?.docs?.source}}},TopEnd.parameters={...TopEnd.parameters,docs:{...TopEnd.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...TopEnd.parameters?.docs?.source}}},BottomStart.parameters={...BottomStart.parameters,docs:{...BottomStart.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...BottomStart.parameters?.docs?.source}}},BottomMiddle.parameters={...BottomMiddle.parameters,docs:{...BottomMiddle.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...BottomMiddle.parameters?.docs?.source}}},BottomEnd.parameters={...BottomEnd.parameters,docs:{...BottomEnd.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...BottomEnd.parameters?.docs?.source}}},RightStart.parameters={...RightStart.parameters,docs:{...RightStart.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...RightStart.parameters?.docs?.source}}},RightMiddle.parameters={...RightMiddle.parameters,docs:{...RightMiddle.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...RightMiddle.parameters?.docs?.source}}},RightEnd.parameters={...RightEnd.parameters,docs:{...RightEnd.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...RightEnd.parameters?.docs?.source}}},LeftStart.parameters={...LeftStart.parameters,docs:{...LeftStart.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...LeftStart.parameters?.docs?.source}}},LeftMiddle.parameters={...LeftMiddle.parameters,docs:{...LeftMiddle.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...LeftMiddle.parameters?.docs?.source}}},LeftEnd.parameters={...LeftEnd.parameters,docs:{...LeftEnd.parameters?.docs,source:{originalSource:"({\n  placement\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <Position anchor={ref} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </Position>\n    </>;\n}",...LeftEnd.parameters?.docs?.source}}}}}]);